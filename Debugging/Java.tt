<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" language="C#" hostspecific="True"#>
<#@ UMLSPF processor="UMLSPFDirectiveProcessor" requires="fileName='IPS_PT2.kacqSPF'" #> 
<#@ include file="EF.utility.CS.ttinclude" #>
<#@ output extension=".java" #>



<#

	String extension = ".java";
	
	var fileManager=EntityFrameworkTemplateFileManager.Create(this); 
		

	if ( this.ModeloClassWEB.Class.Count == 0 ) {
		WriteLine("Solucion vacía. No se ha configurado ningún nodo");
	}
	else{ 
		
		Clase modelClass;
		
						
		foreach(Clase nodo in this.ModeloClassWEB.Class) {
		
			if (nodo is Clase) {
				modelClass = ((Clase)nodo);		
				fileManager.StartNewFile(modelClass.NombreClase+extension);	

				WriteLine("public class "+ modelClass.NombreClase+ " {");
				


					WriteLine( modelClass.NombreClase+"(){}" );

					foreach (Atributo atrib in modelClass.Atrib){
						WriteLine(getModificador(atrib.Modificador)+" "+getTipoDato(atrib.TipoAtributo) +" "+ atrib.NombreAtributo +";");						
						WriteLine(getModificador(atrib.Modificador)+" get"+atrib.NombreAtributo+"("+getTipoDato(atrib.TipoAtributo)+" "+atrib.NombreAtributo+")"+"{}");
						WriteLine(getModificador(atrib.Modificador)+" set"+atrib.NombreAtributo+"("+getTipoDato(atrib.TipoAtributo)+" "+atrib.NombreAtributo+")"+"{return "+getTipoDato(atrib.TipoAtributo)+" "+atrib.NombreAtributo+";}");
					}

					foreach (Operaciones metho in modelClass.Methods){	
						
						if ( metho.Params.Count == 0 ) {
							WriteLine( getModificador(metho.Modificador)+" "+getTipoDato(metho.TipoOperacion) +" "+ metho.NombreOperacion );
						}
						else {
							string parametros = "";
							foreach(Parametros paramz in metho.Params ) {
								parametros += getTipoDato(paramz.TipoDato)+" "+paramz.NombreParametro;							
							}						

							WriteLine( getModificador(metho.Modificador)+" "+getTipoDato(metho.TipoOperacion) +" "+ metho.NombreOperacion+"("+parametros+")" +"{ return 0;}");
						}

					}
				
			
			WriteLine("}");
			}

		}

		foreach(Herencia herencia in this.ModeloClassWEB.Herencia){
			foreach(Clase Hija in herencia.ClaseHija){

			}
		}

	}

	// cierra el proceso de creación de ficheros del documento.
	fileManager.Process();

#>

<#+
	private String getTipoDato(tipodato dato){
		String c = dato.ToString();
		return c.ToLower();
	}
#>

<#+
	private String getModificador(Modificadores mod){
		String c = mod.ToString();
		return c.ToLower();
	}
#>

