//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainClass ModeloClassWEB
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.ModeloClassWEB.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.ModeloClassWEB.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("b02e610b-5879-48eb-a2ed-4ea1dde69208")]
	public partial class ModeloClassWEB : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ModeloClassWEB domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb02e610b, 0x5879, 0x48eb, 0xa2, 0xed, 0x4e, 0xa1, 0xdd, 0xe6, 0x92, 0x08);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ModeloClassWEB(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ModeloClassWEB(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region NombreUML domain property code
		
		/// <summary>
		/// NombreUML domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreUMLDomainPropertyId = new global::System.Guid(0x06a166ed, 0x8c95, 0x4dce, 0xae, 0x56, 0x36, 0xd3, 0x85, 0xbb, 0xe5, 0x4d);
		
		/// <summary>
		/// Storage for NombreUML
		/// </summary>
		private global::System.String nombreUMLPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of NombreUML domain property.
		/// Description for IPS.UMLSPF.ModeloClassWEB.Nombre UML
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ModeloClassWEB/NombreUML.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ModeloClassWEB/NombreUML.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("06a166ed-8c95-4dce-ae56-36d385bbe54d")]
		public global::System.String NombreUML
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreUMLPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreUMLPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ModeloClassWEB.NombreUML domain property.
		/// </summary>
		internal sealed partial class NombreUMLPropertyHandler : DslModeling::DomainPropertyValueHandler<ModeloClassWEB, global::System.String>
		{
			private NombreUMLPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ModeloClassWEB.NombreUML domain property value handler.
			/// </summary>
			public static readonly NombreUMLPropertyHandler Instance = new NombreUMLPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ModeloClassWEB.NombreUML domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreUMLDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ModeloClassWEB element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreUMLPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ModeloClassWEB element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreUMLPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Clase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase.
		/// Description for IPS.UMLSPF.ModeloClassWEBHasClase.ModeloClassWEB
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::IPS.UMLSPF.ModeloClassWEBHasClase.ModeloClassWEBDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::IPS.UMLSPF.Clase.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::IPS.UMLSPF.Clase sourceClase1 = sourceElement as global::IPS.UMLSPF.Clase;
			if (sourceClase1 != null)
			{
				// Create link for path ModeloClassWEBHasClase.Clase
				this.Clase.Add(sourceClase1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::IPS.UMLSPF.Clase sourceClase1 = sourceElement as global::IPS.UMLSPF.Clase;
			if (sourceClase1 != null)
			{
				// Delete link for path ModeloClassWEBHasClase.Clase
				
				foreach (DslModeling::ElementLink link in global::IPS.UMLSPF.ModeloClassWEBHasClase.GetLinks((global::IPS.UMLSPF.ModeloClassWEB)this, sourceClase1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::IPS.UMLSPF.ModeloClassWEBHasClase.ModeloClassWEBDomainRoleId, global::IPS.UMLSPF.ModeloClassWEBHasClase.ClaseDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainClass Clase
	/// Description for IPS.UMLSPF.Clase
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.Clase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.Clase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("7d6bb19e-078c-44f5-9d97-925326da3444")]
	public partial class Clase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Clase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7d6bb19e, 0x078c, 0x44f5, 0x9d, 0x97, 0x92, 0x53, 0x26, 0xda, 0x34, 0x44);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region NombreClase domain property code
		
		/// <summary>
		/// NombreClase domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreClaseDomainPropertyId = new global::System.Guid(0xce0f14fa, 0x0c97, 0x4f94, 0xa8, 0x7a, 0x25, 0x5a, 0x92, 0x33, 0x84, 0xba);
		
		/// <summary>
		/// Storage for NombreClase
		/// </summary>
		private global::System.String nombreClasePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of NombreClase domain property.
		/// Description for IPS.UMLSPF.Clase.Nombre Clase
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.Clase/NombreClase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.Clase/NombreClase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ce0f14fa-0c97-4f94-a87a-255a923384ba")]
		public global::System.String NombreClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreClasePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreClasePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.NombreClase domain property.
		/// </summary>
		internal sealed partial class NombreClasePropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, global::System.String>
		{
			private NombreClasePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.NombreClase domain property value handler.
			/// </summary>
			public static readonly NombreClasePropertyHandler Instance = new NombreClasePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.NombreClase domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreClaseDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreClasePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreClasePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ModeloClassWEB opposite domain role accessor
		/// <summary>
		/// Gets or sets ModeloClassWEB.
		/// Description for IPS.UMLSPF.ModeloClassWEBHasClase.Clase
		/// </summary>
		public virtual ModeloClassWEB ModeloClassWEB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::IPS.UMLSPF.ModeloClassWEBHasClase.ClaseDomainRoleId) as ModeloClassWEB;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::IPS.UMLSPF.ModeloClassWEBHasClase.ClaseDomainRoleId, value);
			}
		}
		#endregion
		#region Atributo opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Atributo.
		/// Description for IPS.UMLSPF.ClaseHasAtributo.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Atributo> Atributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Atributo>, Atributo>(global::IPS.UMLSPF.ClaseHasAtributo.ClaseDomainRoleId);
			}
		}
		#endregion
		#region Operaciones opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Operaciones.
		/// Description for IPS.UMLSPF.ClaseHasOperaciones.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Operaciones> Operaciones
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Operaciones>, Operaciones>(global::IPS.UMLSPF.ClaseHasOperaciones.ClaseDomainRoleId);
			}
		}
		#endregion
		#region TargetClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of TargetClase.
		/// Description for IPS.UMLSPF.conAsociacion.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> TargetClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::IPS.UMLSPF.conAsociacion.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region SourceClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SourceClase.
		/// Description for IPS.UMLSPF.conAsociacion.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> SourceClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::IPS.UMLSPF.conAsociacion.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region CompTargetClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of CompTargetClase.
		/// Description for IPS.UMLSPF.conComposicion.CompSourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> CompTargetClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::IPS.UMLSPF.conComposicion.CompSourceClaseDomainRoleId);
			}
		}
		#endregion
		#region CompSourceClase opposite domain role accessor
		/// <summary>
		/// Gets or sets CompSourceClase.
		/// Description for IPS.UMLSPF.conComposicion.CompTargetClase
		/// </summary>
		public virtual Clase CompSourceClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::IPS.UMLSPF.conComposicion.CompTargetClaseDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::IPS.UMLSPF.conComposicion.CompTargetClaseDomainRoleId, value);
			}
		}
		#endregion
		#region AgreTargetClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AgreTargetClase.
		/// Description for IPS.UMLSPF.conAgregacion.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> AgreTargetClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::IPS.UMLSPF.conAgregacion.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region AgreSourceClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AgreSourceClase.
		/// Description for IPS.UMLSPF.conAgregacion.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> AgreSourceClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::IPS.UMLSPF.conAgregacion.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::IPS.UMLSPF.Atributo.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::IPS.UMLSPF.Operaciones.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::IPS.UMLSPF.Clase.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::IPS.UMLSPF.Atributo sourceAtributo1 = sourceElement as global::IPS.UMLSPF.Atributo;
			if (sourceAtributo1 != null)
			{
				// Create link for path ClaseHasAtributo.Atributo
				this.Atributo.Add(sourceAtributo1);

				return;
			}
				
			global::IPS.UMLSPF.Operaciones sourceOperaciones2 = sourceElement as global::IPS.UMLSPF.Operaciones;
			if (sourceOperaciones2 != null)
			{
				// Create link for path ClaseHasOperaciones.Operaciones
				this.Operaciones.Add(sourceOperaciones2);

				return;
			}
				
			global::IPS.UMLSPF.Clase sourceClase3 = sourceElement as global::IPS.UMLSPF.Clase;
			if (sourceClase3 != null)
			{
				// Create link for path conComposicion.CompTargetClase
				this.CompTargetClase.Add(sourceClase3);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::IPS.UMLSPF.Atributo sourceAtributo1 = sourceElement as global::IPS.UMLSPF.Atributo;
			if (sourceAtributo1 != null)
			{
				// Delete link for path ClaseHasAtributo.Atributo
				
				foreach (DslModeling::ElementLink link in global::IPS.UMLSPF.ClaseHasAtributo.GetLinks((global::IPS.UMLSPF.Clase)this, sourceAtributo1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::IPS.UMLSPF.ClaseHasAtributo.ClaseDomainRoleId, global::IPS.UMLSPF.ClaseHasAtributo.AtributoDomainRoleId);
				}

				return;
			}
				
			global::IPS.UMLSPF.Operaciones sourceOperaciones2 = sourceElement as global::IPS.UMLSPF.Operaciones;
			if (sourceOperaciones2 != null)
			{
				// Delete link for path ClaseHasOperaciones.Operaciones
				
				foreach (DslModeling::ElementLink link in global::IPS.UMLSPF.ClaseHasOperaciones.GetLinks((global::IPS.UMLSPF.Clase)this, sourceOperaciones2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::IPS.UMLSPF.ClaseHasOperaciones.ClaseDomainRoleId, global::IPS.UMLSPF.ClaseHasOperaciones.OperacionesDomainRoleId);
				}

				return;
			}
				
			global::IPS.UMLSPF.Clase sourceClase3 = sourceElement as global::IPS.UMLSPF.Clase;
			if (sourceClase3 != null)
			{
				// Delete link for path conComposicion.CompTargetClase
				
				foreach (DslModeling::ElementLink link in global::IPS.UMLSPF.conComposicion.GetLinks((global::IPS.UMLSPF.Clase)this, sourceClase3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::IPS.UMLSPF.conComposicion.CompSourceClaseDomainRoleId, global::IPS.UMLSPF.conComposicion.CompTargetClaseDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainClass Atributo
	/// Description for IPS.UMLSPF.Atributo
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.Atributo.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.Atributo.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("15e0cb84-72cd-496c-a7d5-96c0af55648a")]
	public partial class Atributo : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Atributo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x15e0cb84, 0x72cd, 0x496c, 0xa7, 0xd5, 0x96, 0xc0, 0xaf, 0x55, 0x64, 0x8a);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region NombreAtributo domain property code
		
		/// <summary>
		/// NombreAtributo domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreAtributoDomainPropertyId = new global::System.Guid(0x1d278e7f, 0x8906, 0x4b8e, 0xac, 0x0c, 0x34, 0x7b, 0x31, 0x7e, 0x00, 0x24);
		
		/// <summary>
		/// Storage for NombreAtributo
		/// </summary>
		private global::System.String nombreAtributoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of NombreAtributo domain property.
		/// Description for IPS.UMLSPF.Atributo.Nombre Atributo
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.Atributo/NombreAtributo.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.Atributo/NombreAtributo.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1d278e7f-8906-4b8e-ac0c-347b317e0024")]
		public global::System.String NombreAtributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreAtributoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreAtributoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.NombreAtributo domain property.
		/// </summary>
		internal sealed partial class NombreAtributoPropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, global::System.String>
		{
			private NombreAtributoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.NombreAtributo domain property value handler.
			/// </summary>
			public static readonly NombreAtributoPropertyHandler Instance = new NombreAtributoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.NombreAtributo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreAtributoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreAtributoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreAtributoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoAtributo domain property code
		
		/// <summary>
		/// TipoAtributo domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoAtributoDomainPropertyId = new global::System.Guid(0xff823fe5, 0x1d5e, 0x43e5, 0x9c, 0xef, 0xc1, 0xb8, 0x53, 0x5d, 0x4a, 0xd9);
		
		/// <summary>
		/// Storage for TipoAtributo
		/// </summary>
		private global::System.String tipoAtributoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of TipoAtributo domain property.
		/// Description for IPS.UMLSPF.Atributo.Tipo Atributo
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.Atributo/TipoAtributo.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.Atributo/TipoAtributo.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ff823fe5-1d5e-43e5-9cef-c1b8535d4ad9")]
		public global::System.String TipoAtributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoAtributoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoAtributoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.TipoAtributo domain property.
		/// </summary>
		internal sealed partial class TipoAtributoPropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, global::System.String>
		{
			private TipoAtributoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.TipoAtributo domain property value handler.
			/// </summary>
			public static readonly TipoAtributoPropertyHandler Instance = new TipoAtributoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.TipoAtributo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoAtributoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoAtributoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoAtributoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region MostrarAtributo domain property code
		
		/// <summary>
		/// MostrarAtributo domain property Id.
		/// </summary>
		public static readonly global::System.Guid MostrarAtributoDomainPropertyId = new global::System.Guid(0x8e6df31c, 0x3122, 0x47d6, 0x84, 0xf6, 0x80, 0xe8, 0x60, 0x98, 0x45, 0x76);
		
		/// <summary>
		/// Gets or sets the value of MostrarAtributo domain property.
		/// Description for IPS.UMLSPF.Atributo.Mostrar Atributo
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.Atributo/MostrarAtributo.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.Atributo/MostrarAtributo.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("8e6df31c-3122-47d6-84f6-80e860984576")]
		public global::System.String MostrarAtributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return MostrarAtributoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.MostrarAtributo domain property.
		/// </summary>
		internal sealed partial class MostrarAtributoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Atributo, global::System.String>
		{
			private MostrarAtributoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.MostrarAtributo domain property value handler.
			/// </summary>
			public static readonly MostrarAtributoPropertyHandler Instance = new MostrarAtributoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.MostrarAtributo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return MostrarAtributoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for MostrarAtributo because its Kind is
				// set to Calculated. Please provide the GetMostrarAtributoValue()
				// method on the domain class.
				return element.GetMostrarAtributoValue();
			}
		
		}
		
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for IPS.UMLSPF.ClaseHasAtributo.Atributo
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::IPS.UMLSPF.ClaseHasAtributo.AtributoDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::IPS.UMLSPF.ClaseHasAtributo.AtributoDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainClass Operaciones
	/// Description for IPS.UMLSPF.Operaciones
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.Operaciones.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.Operaciones.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("87bb9588-ec65-4d28-b5cc-545cea7713b9")]
	public partial class Operaciones : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Operaciones domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x87bb9588, 0xec65, 0x4d28, 0xb5, 0xcc, 0x54, 0x5c, 0xea, 0x77, 0x13, 0xb9);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Operaciones(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Operaciones(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region NombreOperacion domain property code
		
		/// <summary>
		/// NombreOperacion domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreOperacionDomainPropertyId = new global::System.Guid(0x086b3a63, 0x8cd2, 0x4187, 0x99, 0xce, 0xe4, 0x06, 0x88, 0x91, 0xc0, 0x35);
		
		/// <summary>
		/// Storage for NombreOperacion
		/// </summary>
		private global::System.String nombreOperacionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of NombreOperacion domain property.
		/// Description for IPS.UMLSPF.Operaciones.Nombre Operacion
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.Operaciones/NombreOperacion.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.Operaciones/NombreOperacion.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("086b3a63-8cd2-4187-99ce-e4068891c035")]
		public global::System.String NombreOperacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreOperacionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreOperacionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Operaciones.NombreOperacion domain property.
		/// </summary>
		internal sealed partial class NombreOperacionPropertyHandler : DslModeling::DomainPropertyValueHandler<Operaciones, global::System.String>
		{
			private NombreOperacionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operaciones.NombreOperacion domain property value handler.
			/// </summary>
			public static readonly NombreOperacionPropertyHandler Instance = new NombreOperacionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operaciones.NombreOperacion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreOperacionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Operaciones element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreOperacionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Operaciones element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreOperacionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoOperacion domain property code
		
		/// <summary>
		/// TipoOperacion domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoOperacionDomainPropertyId = new global::System.Guid(0xfc97e0b4, 0xf8b7, 0x4ff6, 0xa2, 0xd9, 0x46, 0xce, 0xb9, 0x09, 0x5f, 0x20);
		
		/// <summary>
		/// Storage for TipoOperacion
		/// </summary>
		private global::System.String tipoOperacionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of TipoOperacion domain property.
		/// Description for IPS.UMLSPF.Operaciones.Tipo Operacion
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.Operaciones/TipoOperacion.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.Operaciones/TipoOperacion.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("fc97e0b4-f8b7-4ff6-a2d9-46ceb9095f20")]
		public global::System.String TipoOperacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoOperacionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoOperacionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Operaciones.TipoOperacion domain property.
		/// </summary>
		internal sealed partial class TipoOperacionPropertyHandler : DslModeling::DomainPropertyValueHandler<Operaciones, global::System.String>
		{
			private TipoOperacionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operaciones.TipoOperacion domain property value handler.
			/// </summary>
			public static readonly TipoOperacionPropertyHandler Instance = new TipoOperacionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operaciones.TipoOperacion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoOperacionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Operaciones element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoOperacionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Operaciones element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoOperacionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region MostrarOperacion domain property code
		
		/// <summary>
		/// MostrarOperacion domain property Id.
		/// </summary>
		public static readonly global::System.Guid MostrarOperacionDomainPropertyId = new global::System.Guid(0x52dc144c, 0x75fe, 0x4f98, 0xab, 0x87, 0x5a, 0x2c, 0x3e, 0x2b, 0xcd, 0xd9);
		
		/// <summary>
		/// Gets or sets the value of MostrarOperacion domain property.
		/// Description for IPS.UMLSPF.Operaciones.Mostrar Operacion
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.Operaciones/MostrarOperacion.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.Operaciones/MostrarOperacion.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("52dc144c-75fe-4f98-ab87-5a2c3e2bcdd9")]
		public global::System.String MostrarOperacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return MostrarOperacionPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Operaciones.MostrarOperacion domain property.
		/// </summary>
		internal sealed partial class MostrarOperacionPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Operaciones, global::System.String>
		{
			private MostrarOperacionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operaciones.MostrarOperacion domain property value handler.
			/// </summary>
			public static readonly MostrarOperacionPropertyHandler Instance = new MostrarOperacionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operaciones.MostrarOperacion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return MostrarOperacionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Operaciones element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for MostrarOperacion because its Kind is
				// set to Calculated. Please provide the GetMostrarOperacionValue()
				// method on the domain class.
				return element.GetMostrarOperacionValue();
			}
		
		}
		
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for IPS.UMLSPF.ClaseHasOperaciones.Operaciones
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::IPS.UMLSPF.ClaseHasOperaciones.OperacionesDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::IPS.UMLSPF.ClaseHasOperaciones.OperacionesDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainClass ClaseEnriquecida
	/// Description for IPS.UMLSPF.ClaseEnriquecida
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseEnriquecida.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseEnriquecida.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("6f1d2bd9-7162-45f9-a6a0-3fa14d4bf656")]
	public partial class ClaseEnriquecida : Clase
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClaseEnriquecida domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x6f1d2bd9, 0x7162, 0x45f9, 0xa6, 0xa0, 0x3f, 0xa1, 0x4d, 0x4b, 0xf6, 0x56);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseEnriquecida(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseEnriquecida(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
