//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship ModeloClassWEBHasClase
	/// Description for IPS.UMLSPF.ModeloClassWEBHasClase
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.ModeloClassWEBHasClase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.ModeloClassWEBHasClase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("a9b6e343-13d8-40ae-994b-012eafb94bff")]
	public partial class ModeloClassWEBHasClase : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ModeloClassWEBHasClase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa9b6e343, 0x13d8, 0x40ae, 0x99, 0x4b, 0x01, 0x2e, 0xaf, 0xb9, 0x4b, 0xff);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ModeloClassWEBHasClase link in the same Partition as the given ModeloClassWEB
		/// </summary>
		/// <param name="source">ModeloClassWEB to use as the source of the relationship.</param>
		/// <param name="target">Clase to use as the target of the relationship.</param>
		public ModeloClassWEBHasClase(ModeloClassWEB source, Clase target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ModeloClassWEBHasClase.ModeloClassWEBDomainRoleId, source), new DslModeling::RoleAssignment(ModeloClassWEBHasClase.ClaseDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ModeloClassWEBHasClase(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ModeloClassWEBHasClase(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ModeloClassWEBHasClase(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ModeloClassWEBHasClase(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ModeloClassWEB domain role code
		
		/// <summary>
		/// ModeloClassWEB domain role Id.
		/// </summary>
		public static readonly global::System.Guid ModeloClassWEBDomainRoleId = new global::System.Guid(0xcd62c36a, 0x4feb, 0x4c05, 0x8a, 0x87, 0xe7, 0x35, 0xab, 0xd2, 0x87, 0x95);
		
		/// <summary>
		/// DomainRole ModeloClassWEB
		/// Description for IPS.UMLSPF.ModeloClassWEBHasClase.ModeloClassWEB
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ModeloClassWEBHasClase/ModeloClassWEB.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ModeloClassWEBHasClase/ModeloClassWEB.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Clase", PropertyDisplayNameKey="IPS.UMLSPF.ModeloClassWEBHasClase/ModeloClassWEB.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("cd62c36a-4feb-4c05-8a87-e735abd28795")]
		public virtual ModeloClassWEB ModeloClassWEB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ModeloClassWEB)DslModeling::DomainRoleInfo.GetRolePlayer(this, ModeloClassWEBDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ModeloClassWEBDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ModeloClassWEB of a Clase
		/// <summary>
		/// Gets ModeloClassWEB.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ModeloClassWEB GetModeloClassWEB(Clase element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ClaseDomainRoleId) as ModeloClassWEB;
		}
		
		/// <summary>
		/// Sets ModeloClassWEB.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetModeloClassWEB(Clase element, ModeloClassWEB newModeloClassWEB)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ClaseDomainRoleId, newModeloClassWEB);
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x7b20d996, 0xb631, 0x4d0a, 0xbd, 0xc4, 0xbf, 0xcf, 0x98, 0x09, 0x2b, 0xc5);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for IPS.UMLSPF.ModeloClassWEBHasClase.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ModeloClassWEBHasClase/Clase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ModeloClassWEBHasClase/Clase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ModeloClassWEB", PropertyDisplayNameKey="IPS.UMLSPF.ModeloClassWEBHasClase/Clase.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("7b20d996-b631-4d0a-bdc4-bfcf98092bc5")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase of a ModeloClassWEB
		/// <summary>
		/// Gets a list of Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClase(ModeloClassWEB element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, ModeloClassWEBDomainRoleId);
		}
		#endregion
		#region ModeloClassWEB link accessor
		/// <summary>
		/// Get the list of ModeloClassWEBHasClase links to a ModeloClassWEB.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ModeloClassWEBHasClase> GetLinksToClase ( global::IPS.UMLSPF.ModeloClassWEB modeloClassWEBInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ModeloClassWEBHasClase>(modeloClassWEBInstance, global::IPS.UMLSPF.ModeloClassWEBHasClase.ModeloClassWEBDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the ModeloClassWEBHasClase link to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ModeloClassWEBHasClase GetLinkToModeloClassWEB (global::IPS.UMLSPF.Clase claseInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ModeloClassWEBHasClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ModeloClassWEBHasClase>(claseInstance, global::IPS.UMLSPF.ModeloClassWEBHasClase.ClaseDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Clase not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ModeloClassWEBHasClase instance accessors
		
		/// <summary>
		/// Get any ModeloClassWEBHasClase links between a given ModeloClassWEB and a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ModeloClassWEBHasClase> GetLinks( global::IPS.UMLSPF.ModeloClassWEB source, global::IPS.UMLSPF.Clase target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.ModeloClassWEBHasClase> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.ModeloClassWEBHasClase>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ModeloClassWEBHasClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ModeloClassWEBHasClase>(source, global::IPS.UMLSPF.ModeloClassWEBHasClase.ModeloClassWEBDomainRoleId);
			foreach ( global::IPS.UMLSPF.ModeloClassWEBHasClase link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ModeloClassWEBHasClase link between a given ModeloClassWEBand a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ModeloClassWEBHasClase GetLink( global::IPS.UMLSPF.ModeloClassWEB source, global::IPS.UMLSPF.Clase target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ModeloClassWEBHasClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ModeloClassWEBHasClase>(source, global::IPS.UMLSPF.ModeloClassWEBHasClase.ModeloClassWEBDomainRoleId);
			foreach ( global::IPS.UMLSPF.ModeloClassWEBHasClase link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship ClaseHasAtributo
	/// Description for IPS.UMLSPF.ClaseHasAtributo
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseHasAtributo.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseHasAtributo.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("8536dcfa-cd47-42ad-bec5-6b313e3f4900")]
	public partial class ClaseHasAtributo : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseHasAtributo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8536dcfa, 0xcd47, 0x42ad, 0xbe, 0xc5, 0x6b, 0x31, 0x3e, 0x3f, 0x49, 0x00);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseHasAtributo link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">Atributo to use as the target of the relationship.</param>
		public ClaseHasAtributo(Clase source, Atributo target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseHasAtributo.ClaseDomainRoleId, source), new DslModeling::RoleAssignment(ClaseHasAtributo.AtributoDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseHasAtributo(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseHasAtributo(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseHasAtributo(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseHasAtributo(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0xdb2f3002, 0x204b, 0x4e00, 0x9b, 0x5a, 0xf7, 0x80, 0xc5, 0xc3, 0xee, 0xba);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for IPS.UMLSPF.ClaseHasAtributo.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseHasAtributo/Clase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseHasAtributo/Clase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Atributo", PropertyDisplayNameKey="IPS.UMLSPF.ClaseHasAtributo/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("db2f3002-204b-4e00-9b5a-f780c5c3eeba")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase of a Atributo
		/// <summary>
		/// Gets Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Clase GetClase(Atributo element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, AtributoDomainRoleId) as Clase;
		}
		
		/// <summary>
		/// Sets Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetClase(Atributo element, Clase newClase)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, AtributoDomainRoleId, newClase);
		}
		#endregion
		#region Atributo domain role code
		
		/// <summary>
		/// Atributo domain role Id.
		/// </summary>
		public static readonly global::System.Guid AtributoDomainRoleId = new global::System.Guid(0x63085b37, 0x3fe4, 0x4d9f, 0xb9, 0x62, 0xf5, 0x81, 0x75, 0x93, 0xb6, 0x64);
		
		/// <summary>
		/// DomainRole Atributo
		/// Description for IPS.UMLSPF.ClaseHasAtributo.Atributo
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseHasAtributo/Atributo.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseHasAtributo/Atributo.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Clase", PropertyDisplayNameKey="IPS.UMLSPF.ClaseHasAtributo/Atributo.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("63085b37-3fe4-4d9f-b962-f5817593b664")]
		public virtual Atributo Atributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Atributo)DslModeling::DomainRoleInfo.GetRolePlayer(this, AtributoDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, AtributoDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Atributo of a Clase
		/// <summary>
		/// Gets a list of Atributo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Atributo> GetAtributo(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Atributo>, Atributo>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of ClaseHasAtributo links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ClaseHasAtributo> GetLinksToAtributo ( global::IPS.UMLSPF.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasAtributo>(claseInstance, global::IPS.UMLSPF.ClaseHasAtributo.ClaseDomainRoleId);
		}
		#endregion
		#region Atributo link accessor
		/// <summary>
		/// Get the ClaseHasAtributo link to a Atributo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseHasAtributo GetLinkToClase (global::IPS.UMLSPF.Atributo atributoInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseHasAtributo> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasAtributo>(atributoInstance, global::IPS.UMLSPF.ClaseHasAtributo.AtributoDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Atributo not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ClaseHasAtributo instance accessors
		
		/// <summary>
		/// Get any ClaseHasAtributo links between a given Clase and a Atributo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ClaseHasAtributo> GetLinks( global::IPS.UMLSPF.Clase source, global::IPS.UMLSPF.Atributo target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseHasAtributo> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseHasAtributo>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseHasAtributo> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasAtributo>(source, global::IPS.UMLSPF.ClaseHasAtributo.ClaseDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseHasAtributo link in links )
			{
				if ( target.Equals(link.Atributo) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseHasAtributo link between a given Claseand a Atributo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseHasAtributo GetLink( global::IPS.UMLSPF.Clase source, global::IPS.UMLSPF.Atributo target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseHasAtributo> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasAtributo>(source, global::IPS.UMLSPF.ClaseHasAtributo.ClaseDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseHasAtributo link in links )
			{
				if ( target.Equals(link.Atributo) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship ClaseHasOperaciones
	/// Description for IPS.UMLSPF.ClaseHasOperaciones
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseHasOperaciones.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseHasOperaciones.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("555a51fc-f4e2-4122-b27c-bffa5105fa66")]
	public partial class ClaseHasOperaciones : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseHasOperaciones domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x555a51fc, 0xf4e2, 0x4122, 0xb2, 0x7c, 0xbf, 0xfa, 0x51, 0x05, 0xfa, 0x66);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseHasOperaciones link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">Operaciones to use as the target of the relationship.</param>
		public ClaseHasOperaciones(Clase source, Operaciones target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseHasOperaciones.ClaseDomainRoleId, source), new DslModeling::RoleAssignment(ClaseHasOperaciones.OperacionesDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseHasOperaciones(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseHasOperaciones(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseHasOperaciones(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseHasOperaciones(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0xdfc13914, 0x090a, 0x41d9, 0xb5, 0x2b, 0x2c, 0x2f, 0x3f, 0xe7, 0x55, 0xcd);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for IPS.UMLSPF.ClaseHasOperaciones.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseHasOperaciones/Clase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseHasOperaciones/Clase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Operaciones", PropertyDisplayNameKey="IPS.UMLSPF.ClaseHasOperaciones/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("dfc13914-090a-41d9-b52b-2c2f3fe755cd")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase of a Operaciones
		/// <summary>
		/// Gets Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Clase GetClase(Operaciones element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, OperacionesDomainRoleId) as Clase;
		}
		
		/// <summary>
		/// Sets Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetClase(Operaciones element, Clase newClase)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, OperacionesDomainRoleId, newClase);
		}
		#endregion
		#region Operaciones domain role code
		
		/// <summary>
		/// Operaciones domain role Id.
		/// </summary>
		public static readonly global::System.Guid OperacionesDomainRoleId = new global::System.Guid(0x78609571, 0x12e9, 0x4d9a, 0x90, 0x70, 0xed, 0xf2, 0x62, 0x8d, 0x29, 0x72);
		
		/// <summary>
		/// DomainRole Operaciones
		/// Description for IPS.UMLSPF.ClaseHasOperaciones.Operaciones
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseHasOperaciones/Operaciones.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseHasOperaciones/Operaciones.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Clase", PropertyDisplayNameKey="IPS.UMLSPF.ClaseHasOperaciones/Operaciones.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("78609571-12e9-4d9a-9070-edf2628d2972")]
		public virtual Operaciones Operaciones
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Operaciones)DslModeling::DomainRoleInfo.GetRolePlayer(this, OperacionesDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, OperacionesDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Operaciones of a Clase
		/// <summary>
		/// Gets a list of Operaciones.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Operaciones> GetOperaciones(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Operaciones>, Operaciones>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of ClaseHasOperaciones links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ClaseHasOperaciones> GetLinksToOperaciones ( global::IPS.UMLSPF.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasOperaciones>(claseInstance, global::IPS.UMLSPF.ClaseHasOperaciones.ClaseDomainRoleId);
		}
		#endregion
		#region Operaciones link accessor
		/// <summary>
		/// Get the ClaseHasOperaciones link to a Operaciones.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseHasOperaciones GetLinkToClase (global::IPS.UMLSPF.Operaciones operacionesInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseHasOperaciones> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasOperaciones>(operacionesInstance, global::IPS.UMLSPF.ClaseHasOperaciones.OperacionesDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Operaciones not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ClaseHasOperaciones instance accessors
		
		/// <summary>
		/// Get any ClaseHasOperaciones links between a given Clase and a Operaciones.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ClaseHasOperaciones> GetLinks( global::IPS.UMLSPF.Clase source, global::IPS.UMLSPF.Operaciones target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseHasOperaciones> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseHasOperaciones>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseHasOperaciones> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasOperaciones>(source, global::IPS.UMLSPF.ClaseHasOperaciones.ClaseDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseHasOperaciones link in links )
			{
				if ( target.Equals(link.Operaciones) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseHasOperaciones link between a given Claseand a Operaciones.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseHasOperaciones GetLink( global::IPS.UMLSPF.Clase source, global::IPS.UMLSPF.Operaciones target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseHasOperaciones> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasOperaciones>(source, global::IPS.UMLSPF.ClaseHasOperaciones.ClaseDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseHasOperaciones link in links )
			{
				if ( target.Equals(link.Operaciones) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship conAsociacion
	/// Description for IPS.UMLSPF.conAsociacion
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.conAsociacion.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.conAsociacion.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("6f46edc6-89a2-47b6-b489-b76d99a215bc")]
	public partial class conAsociacion : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// conAsociacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x6f46edc6, 0x89a2, 0x47b6, 0xb4, 0x89, 0xb7, 0x6d, 0x99, 0xa2, 0x15, 0xbc);
	
				
		/// <summary>
		/// Constructor
		/// Creates a conAsociacion link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">Clase to use as the target of the relationship.</param>
		public conAsociacion(Clase source, Clase target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(conAsociacion.SourceClaseDomainRoleId, source), new DslModeling::RoleAssignment(conAsociacion.TargetClaseDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public conAsociacion(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public conAsociacion(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public conAsociacion(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public conAsociacion(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region SourceClase domain role code
		
		/// <summary>
		/// SourceClase domain role Id.
		/// </summary>
		public static readonly global::System.Guid SourceClaseDomainRoleId = new global::System.Guid(0x7fd2a6d7, 0x29f6, 0x43ea, 0x9c, 0xb2, 0x49, 0x7a, 0x0f, 0x0b, 0x34, 0x5a);
		
		/// <summary>
		/// DomainRole SourceClase
		/// Description for IPS.UMLSPF.conAsociacion.SourceClase
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.conAsociacion/SourceClase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.conAsociacion/SourceClase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "TargetClase", PropertyDisplayNameKey="IPS.UMLSPF.conAsociacion/SourceClase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("7fd2a6d7-29f6-43ea-9cb2-497a0f0b345a")]
		public virtual Clase SourceClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, SourceClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SourceClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access SourceClase of a Clase
		/// <summary>
		/// Gets a list of SourceClase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetSourceClase(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, TargetClaseDomainRoleId);
		}
		#endregion
		#region TargetClase domain role code
		
		/// <summary>
		/// TargetClase domain role Id.
		/// </summary>
		public static readonly global::System.Guid TargetClaseDomainRoleId = new global::System.Guid(0x67f5ef43, 0xfd4f, 0x4067, 0x92, 0xea, 0xe4, 0x7d, 0xcf, 0x72, 0xc7, 0x44);
		
		/// <summary>
		/// DomainRole TargetClase
		/// Description for IPS.UMLSPF.conAsociacion.TargetClase
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.conAsociacion/TargetClase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.conAsociacion/TargetClase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "SourceClase", PropertyDisplayNameKey="IPS.UMLSPF.conAsociacion/TargetClase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("67f5ef43-fd4f-4067-92ea-e47dcf72c744")]
		public virtual Clase TargetClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, TargetClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TargetClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access TargetClase of a Clase
		/// <summary>
		/// Gets a list of TargetClase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetTargetClase(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, SourceClaseDomainRoleId);
		}
		#endregion
		#region refD domain property code
		
		/// <summary>
		/// refD domain property Id.
		/// </summary>
		public static readonly global::System.Guid refDDomainPropertyId = new global::System.Guid(0x7de83d71, 0xad8f, 0x4919, 0x86, 0x8f, 0xd0, 0xe6, 0x8c, 0xaf, 0xa9, 0x6c);
		
		/// <summary>
		/// Storage for refD
		/// </summary>
		private Cardinalidades refDPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of refD domain property.
		/// Establecer cardinalidad entre clases
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.conAsociacion/refD.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.conAsociacion/refD.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("7de83d71-ad8f-4919-868f-d0e68cafa96c")]
		public Cardinalidades refD
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return refDPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				refDPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the conAsociacion.refD domain property.
		/// </summary>
		internal sealed partial class refDPropertyHandler : DslModeling::DomainPropertyValueHandler<conAsociacion, Cardinalidades>
		{
			private refDPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the conAsociacion.refD domain property value handler.
			/// </summary>
			public static readonly refDPropertyHandler Instance = new refDPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the conAsociacion.refD domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return refDDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed Cardinalidades GetValue(conAsociacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.refDPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(conAsociacion element, Cardinalidades newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				Cardinalidades oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.refDPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region refI domain property code
		
		/// <summary>
		/// refI domain property Id.
		/// </summary>
		public static readonly global::System.Guid refIDomainPropertyId = new global::System.Guid(0x979cb249, 0x5e5a, 0x4ad9, 0xa7, 0xf4, 0xdb, 0x1d, 0xdd, 0xac, 0xce, 0x9d);
		
		/// <summary>
		/// Storage for refI
		/// </summary>
		private Cardinalidades refIPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of refI domain property.
		/// Establecer cardinalidad entre clases
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.conAsociacion/refI.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.conAsociacion/refI.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("979cb249-5e5a-4ad9-a7f4-db1dddacce9d")]
		public Cardinalidades refI
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return refIPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				refIPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the conAsociacion.refI domain property.
		/// </summary>
		internal sealed partial class refIPropertyHandler : DslModeling::DomainPropertyValueHandler<conAsociacion, Cardinalidades>
		{
			private refIPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the conAsociacion.refI domain property value handler.
			/// </summary>
			public static readonly refIPropertyHandler Instance = new refIPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the conAsociacion.refI domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return refIDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed Cardinalidades GetValue(conAsociacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.refIPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(conAsociacion element, Cardinalidades newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				Cardinalidades oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.refIPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NombreRelacion domain property code
		
		/// <summary>
		/// NombreRelacion domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreRelacionDomainPropertyId = new global::System.Guid(0xffff40d9, 0xa340, 0x4e2a, 0xa3, 0x66, 0x94, 0xa7, 0x4e, 0xeb, 0x24, 0x86);
		
		/// <summary>
		/// Storage for NombreRelacion
		/// </summary>
		private global::System.String nombreRelacionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of NombreRelacion domain property.
		/// Establecer nonbre relacion entre las clases
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.conAsociacion/NombreRelacion.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.conAsociacion/NombreRelacion.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ffff40d9-a340-4e2a-a366-94a74eeb2486")]
		public global::System.String NombreRelacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreRelacionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreRelacionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the conAsociacion.NombreRelacion domain property.
		/// </summary>
		internal sealed partial class NombreRelacionPropertyHandler : DslModeling::DomainPropertyValueHandler<conAsociacion, global::System.String>
		{
			private NombreRelacionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the conAsociacion.NombreRelacion domain property value handler.
			/// </summary>
			public static readonly NombreRelacionPropertyHandler Instance = new NombreRelacionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the conAsociacion.NombreRelacion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreRelacionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(conAsociacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreRelacionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(conAsociacion element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreRelacionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NameRelation domain property code
		
		/// <summary>
		/// NameRelation domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameRelationDomainPropertyId = new global::System.Guid(0x94402480, 0xf913, 0x48fc, 0x8d, 0x09, 0xb3, 0x08, 0x6c, 0x58, 0x40, 0xb6);
		
		/// <summary>
		/// Storage for NameRelation
		/// </summary>
		private global::System.String nameRelationPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of NameRelation domain property.
		/// Establecer nonbre relacion entre las clases
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.conAsociacion/NameRelation.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.conAsociacion/NameRelation.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("94402480-f913-48fc-8d09-b3086c5840b6")]
		public global::System.String NameRelation
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nameRelationPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NameRelationPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the conAsociacion.NameRelation domain property.
		/// </summary>
		internal sealed partial class NameRelationPropertyHandler : DslModeling::DomainPropertyValueHandler<conAsociacion, global::System.String>
		{
			private NameRelationPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the conAsociacion.NameRelation domain property value handler.
			/// </summary>
			public static readonly NameRelationPropertyHandler Instance = new NameRelationPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the conAsociacion.NameRelation domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameRelationDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(conAsociacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nameRelationPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(conAsociacion element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nameRelationPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ConexionTipo domain property code
		
		/// <summary>
		/// ConexionTipo domain property Id.
		/// </summary>
		public static readonly global::System.Guid ConexionTipoDomainPropertyId = new global::System.Guid(0xf80ef299, 0x811b, 0x4ba2, 0xa3, 0x44, 0xf2, 0x9b, 0x97, 0x58, 0x5d, 0x48);
		
		/// <summary>
		/// Storage for ConexionTipo
		/// </summary>
		private ConexionTipos conexionTipoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ConexionTipo domain property.
		/// Establecer tipo de conexion
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.conAsociacion/ConexionTipo.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.conAsociacion/ConexionTipo.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f80ef299-811b-4ba2-a344-f29b97585d48")]
		public ConexionTipos ConexionTipo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return conexionTipoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ConexionTipoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the conAsociacion.ConexionTipo domain property.
		/// </summary>
		internal sealed partial class ConexionTipoPropertyHandler : DslModeling::DomainPropertyValueHandler<conAsociacion, ConexionTipos>
		{
			private ConexionTipoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the conAsociacion.ConexionTipo domain property value handler.
			/// </summary>
			public static readonly ConexionTipoPropertyHandler Instance = new ConexionTipoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the conAsociacion.ConexionTipo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ConexionTipoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed ConexionTipos GetValue(conAsociacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.conexionTipoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(conAsociacion element, ConexionTipos newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				ConexionTipos oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.conexionTipoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SourceClase link accessor
		/// <summary>
		/// Get the list of conAsociacion links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.conAsociacion> GetLinksToTargetClase ( global::IPS.UMLSPF.Clase sourceClaseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.conAsociacion>(sourceClaseInstance, global::IPS.UMLSPF.conAsociacion.SourceClaseDomainRoleId);
		}
		#endregion
		#region TargetClase link accessor
		/// <summary>
		/// Get the list of conAsociacion links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.conAsociacion> GetLinksToSourceClase ( global::IPS.UMLSPF.Clase targetClaseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.conAsociacion>(targetClaseInstance, global::IPS.UMLSPF.conAsociacion.TargetClaseDomainRoleId);
		}
		#endregion
		#region conAsociacion instance accessors
		
		/// <summary>
		/// Get any conAsociacion links between a given Clase and a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.conAsociacion> GetLinks( global::IPS.UMLSPF.Clase source, global::IPS.UMLSPF.Clase target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.conAsociacion> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.conAsociacion>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.conAsociacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.conAsociacion>(source, global::IPS.UMLSPF.conAsociacion.SourceClaseDomainRoleId);
			foreach ( global::IPS.UMLSPF.conAsociacion link in links )
			{
				if ( target.Equals(link.TargetClase) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one conAsociacion link between a given Claseand a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.conAsociacion GetLink( global::IPS.UMLSPF.Clase source, global::IPS.UMLSPF.Clase target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.conAsociacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.conAsociacion>(source, global::IPS.UMLSPF.conAsociacion.SourceClaseDomainRoleId);
			foreach ( global::IPS.UMLSPF.conAsociacion link in links )
			{
				if ( target.Equals(link.TargetClase) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship ClaseEnriquecidaHasEstilosClase
	/// Description for IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("262c7f2b-659c-4761-bf32-55514e4a6aee")]
	public partial class ClaseEnriquecidaHasEstilosClase : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseEnriquecidaHasEstilosClase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x262c7f2b, 0x659c, 0x4761, 0xbf, 0x32, 0x55, 0x51, 0x4e, 0x4a, 0x6a, 0xee);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseEnriquecidaHasEstilosClase link in the same Partition as the given ClaseEnriquecida
		/// </summary>
		/// <param name="source">ClaseEnriquecida to use as the source of the relationship.</param>
		/// <param name="target">EstilosClase to use as the target of the relationship.</param>
		public ClaseEnriquecidaHasEstilosClase(ClaseEnriquecida source, EstilosClase target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseEnriquecidaHasEstilosClase.ClaseEnriquecidaDomainRoleId, source), new DslModeling::RoleAssignment(ClaseEnriquecidaHasEstilosClase.EstilosClaseDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseEnriquecidaHasEstilosClase(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseEnriquecidaHasEstilosClase(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseEnriquecidaHasEstilosClase(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseEnriquecidaHasEstilosClase(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ClaseEnriquecida domain role code
		
		/// <summary>
		/// ClaseEnriquecida domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseEnriquecidaDomainRoleId = new global::System.Guid(0x58dd85a2, 0x24a3, 0x4e37, 0x95, 0x6a, 0x3b, 0x70, 0x62, 0xf9, 0xe7, 0x2c);
		
		/// <summary>
		/// DomainRole ClaseEnriquecida
		/// Description for IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase.ClaseEnriquecida
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase/ClaseEnriquecida.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase/ClaseEnriquecida.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstilosClase", PropertyDisplayNameKey="IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase/ClaseEnriquecida.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("58dd85a2-24a3-4e37-956a-3b7062f9e72c")]
		public virtual ClaseEnriquecida ClaseEnriquecida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ClaseEnriquecida)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseEnriquecidaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseEnriquecidaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ClaseEnriquecida of a EstilosClase
		/// <summary>
		/// Gets ClaseEnriquecida.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ClaseEnriquecida GetClaseEnriquecida(EstilosClase element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, EstilosClaseDomainRoleId) as ClaseEnriquecida;
		}
		
		/// <summary>
		/// Sets ClaseEnriquecida.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetClaseEnriquecida(EstilosClase element, ClaseEnriquecida newClaseEnriquecida)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, EstilosClaseDomainRoleId, newClaseEnriquecida);
		}
		#endregion
		#region EstilosClase domain role code
		
		/// <summary>
		/// EstilosClase domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstilosClaseDomainRoleId = new global::System.Guid(0x7d7a8e6c, 0x2d8d, 0x4895, 0xa1, 0x2b, 0x8f, 0x41, 0xc5, 0x43, 0xbd, 0xfb);
		
		/// <summary>
		/// DomainRole EstilosClase
		/// Description for IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase.EstilosClase
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase/EstilosClase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase/EstilosClase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ClaseEnriquecida", PropertyDisplayNameKey="IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase/EstilosClase.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("7d7a8e6c-2d8d-4895-a12b-8f41c543bdfb")]
		public virtual EstilosClase EstilosClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstilosClase)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstilosClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstilosClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstilosClase of a ClaseEnriquecida
		/// <summary>
		/// Gets EstilosClase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static EstilosClase GetEstilosClase(ClaseEnriquecida element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ClaseEnriquecidaDomainRoleId) as EstilosClase;
		}
		
		/// <summary>
		/// Sets EstilosClase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEstilosClase(ClaseEnriquecida element, EstilosClase newEstilosClase)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ClaseEnriquecidaDomainRoleId, newEstilosClase);
		}
		#endregion
		#region ClaseEnriquecida link accessor
		/// <summary>
		/// Get the ClaseEnriquecidaHasEstilosClase link to a ClaseEnriquecida.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase GetLinkToEstilosClase (global::IPS.UMLSPF.ClaseEnriquecida claseEnriquecidaInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase>(claseEnriquecidaInstance, global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase.ClaseEnriquecidaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ClaseEnriquecida not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region EstilosClase link accessor
		/// <summary>
		/// Get the ClaseEnriquecidaHasEstilosClase link to a EstilosClase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase GetLinkToClaseEnriquecida (global::IPS.UMLSPF.EstilosClase estilosClaseInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase>(estilosClaseInstance, global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase.EstilosClaseDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of EstilosClase not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ClaseEnriquecidaHasEstilosClase instance accessors
		
		/// <summary>
		/// Get any ClaseEnriquecidaHasEstilosClase links between a given ClaseEnriquecida and a EstilosClase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase> GetLinks( global::IPS.UMLSPF.ClaseEnriquecida source, global::IPS.UMLSPF.EstilosClase target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase>(source, global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase.ClaseEnriquecidaDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase link in links )
			{
				if ( target.Equals(link.EstilosClase) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseEnriquecidaHasEstilosClase link between a given ClaseEnriquecidaand a EstilosClase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase GetLink( global::IPS.UMLSPF.ClaseEnriquecida source, global::IPS.UMLSPF.EstilosClase target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase>(source, global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase.ClaseEnriquecidaDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseEnriquecidaHasEstilosClase link in links )
			{
				if ( target.Equals(link.EstilosClase) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship ClaseEnriquecidaHasEstiloAtributos
	/// Description for IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("152ed9dc-919b-4fdc-b705-6edaee7103e1")]
	public partial class ClaseEnriquecidaHasEstiloAtributos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseEnriquecidaHasEstiloAtributos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x152ed9dc, 0x919b, 0x4fdc, 0xb7, 0x05, 0x6e, 0xda, 0xee, 0x71, 0x03, 0xe1);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseEnriquecidaHasEstiloAtributos link in the same Partition as the given ClaseEnriquecida
		/// </summary>
		/// <param name="source">ClaseEnriquecida to use as the source of the relationship.</param>
		/// <param name="target">EstiloAtributos to use as the target of the relationship.</param>
		public ClaseEnriquecidaHasEstiloAtributos(ClaseEnriquecida source, EstiloAtributos target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseEnriquecidaHasEstiloAtributos.ClaseEnriquecidaDomainRoleId, source), new DslModeling::RoleAssignment(ClaseEnriquecidaHasEstiloAtributos.EstiloAtributosDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseEnriquecidaHasEstiloAtributos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseEnriquecidaHasEstiloAtributos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseEnriquecidaHasEstiloAtributos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseEnriquecidaHasEstiloAtributos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ClaseEnriquecida domain role code
		
		/// <summary>
		/// ClaseEnriquecida domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseEnriquecidaDomainRoleId = new global::System.Guid(0x6d6592a5, 0xcdcd, 0x4603, 0xa5, 0x35, 0xe2, 0x43, 0xaa, 0x27, 0xbb, 0xf1);
		
		/// <summary>
		/// DomainRole ClaseEnriquecida
		/// Description for IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos.ClaseEnriquecida
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos/ClaseEnriquecida.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos/ClaseEnriquecida.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstiloAtributos", PropertyDisplayNameKey="IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos/ClaseEnriquecida.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("6d6592a5-cdcd-4603-a535-e243aa27bbf1")]
		public virtual ClaseEnriquecida ClaseEnriquecida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ClaseEnriquecida)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseEnriquecidaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseEnriquecidaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ClaseEnriquecida of a EstiloAtributos
		/// <summary>
		/// Gets ClaseEnriquecida.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ClaseEnriquecida GetClaseEnriquecida(EstiloAtributos element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, EstiloAtributosDomainRoleId) as ClaseEnriquecida;
		}
		
		/// <summary>
		/// Sets ClaseEnriquecida.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetClaseEnriquecida(EstiloAtributos element, ClaseEnriquecida newClaseEnriquecida)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, EstiloAtributosDomainRoleId, newClaseEnriquecida);
		}
		#endregion
		#region EstiloAtributos domain role code
		
		/// <summary>
		/// EstiloAtributos domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstiloAtributosDomainRoleId = new global::System.Guid(0x2c53b122, 0xa1ac, 0x4777, 0xbd, 0x05, 0x9a, 0x86, 0xfa, 0x7a, 0x40, 0xa2);
		
		/// <summary>
		/// DomainRole EstiloAtributos
		/// Description for IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos.EstiloAtributos
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos/EstiloAtributos.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos/EstiloAtributos.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ClaseEnriquecida", PropertyDisplayNameKey="IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos/EstiloAtributos.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("2c53b122-a1ac-4777-bd05-9a86fa7a40a2")]
		public virtual EstiloAtributos EstiloAtributos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstiloAtributos)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstiloAtributosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstiloAtributosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstiloAtributos of a ClaseEnriquecida
		/// <summary>
		/// Gets EstiloAtributos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static EstiloAtributos GetEstiloAtributos(ClaseEnriquecida element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ClaseEnriquecidaDomainRoleId) as EstiloAtributos;
		}
		
		/// <summary>
		/// Sets EstiloAtributos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEstiloAtributos(ClaseEnriquecida element, EstiloAtributos newEstiloAtributos)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ClaseEnriquecidaDomainRoleId, newEstiloAtributos);
		}
		#endregion
		#region ClaseEnriquecida link accessor
		/// <summary>
		/// Get the ClaseEnriquecidaHasEstiloAtributos link to a ClaseEnriquecida.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos GetLinkToEstiloAtributos (global::IPS.UMLSPF.ClaseEnriquecida claseEnriquecidaInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos>(claseEnriquecidaInstance, global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos.ClaseEnriquecidaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ClaseEnriquecida not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region EstiloAtributos link accessor
		/// <summary>
		/// Get the ClaseEnriquecidaHasEstiloAtributos link to a EstiloAtributos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos GetLinkToClaseEnriquecida (global::IPS.UMLSPF.EstiloAtributos estiloAtributosInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos>(estiloAtributosInstance, global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos.EstiloAtributosDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of EstiloAtributos not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ClaseEnriquecidaHasEstiloAtributos instance accessors
		
		/// <summary>
		/// Get any ClaseEnriquecidaHasEstiloAtributos links between a given ClaseEnriquecida and a EstiloAtributos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos> GetLinks( global::IPS.UMLSPF.ClaseEnriquecida source, global::IPS.UMLSPF.EstiloAtributos target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos>(source, global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos.ClaseEnriquecidaDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos link in links )
			{
				if ( target.Equals(link.EstiloAtributos) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseEnriquecidaHasEstiloAtributos link between a given ClaseEnriquecidaand a EstiloAtributos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos GetLink( global::IPS.UMLSPF.ClaseEnriquecida source, global::IPS.UMLSPF.EstiloAtributos target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos>(source, global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos.ClaseEnriquecidaDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloAtributos link in links )
			{
				if ( target.Equals(link.EstiloAtributos) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship ClaseEnriquecidaHasEstiloMetodos
	/// Description for IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("252fa143-b76c-42ec-817f-02aec7ac9bca")]
	public partial class ClaseEnriquecidaHasEstiloMetodos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseEnriquecidaHasEstiloMetodos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x252fa143, 0xb76c, 0x42ec, 0x81, 0x7f, 0x02, 0xae, 0xc7, 0xac, 0x9b, 0xca);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseEnriquecidaHasEstiloMetodos link in the same Partition as the given ClaseEnriquecida
		/// </summary>
		/// <param name="source">ClaseEnriquecida to use as the source of the relationship.</param>
		/// <param name="target">EstiloMetodos to use as the target of the relationship.</param>
		public ClaseEnriquecidaHasEstiloMetodos(ClaseEnriquecida source, EstiloMetodos target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseEnriquecidaHasEstiloMetodos.ClaseEnriquecidaDomainRoleId, source), new DslModeling::RoleAssignment(ClaseEnriquecidaHasEstiloMetodos.EstiloMetodosDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseEnriquecidaHasEstiloMetodos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseEnriquecidaHasEstiloMetodos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseEnriquecidaHasEstiloMetodos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseEnriquecidaHasEstiloMetodos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ClaseEnriquecida domain role code
		
		/// <summary>
		/// ClaseEnriquecida domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseEnriquecidaDomainRoleId = new global::System.Guid(0x6cc245b0, 0x5f75, 0x4340, 0x80, 0x14, 0x6f, 0x24, 0xde, 0xca, 0x6c, 0xa2);
		
		/// <summary>
		/// DomainRole ClaseEnriquecida
		/// Description for IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos.ClaseEnriquecida
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos/ClaseEnriquecida.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos/ClaseEnriquecida.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstiloMetodos", PropertyDisplayNameKey="IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos/ClaseEnriquecida.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("6cc245b0-5f75-4340-8014-6f24deca6ca2")]
		public virtual ClaseEnriquecida ClaseEnriquecida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ClaseEnriquecida)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseEnriquecidaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseEnriquecidaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ClaseEnriquecida of a EstiloMetodos
		/// <summary>
		/// Gets ClaseEnriquecida.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ClaseEnriquecida GetClaseEnriquecida(EstiloMetodos element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, EstiloMetodosDomainRoleId) as ClaseEnriquecida;
		}
		
		/// <summary>
		/// Sets ClaseEnriquecida.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetClaseEnriquecida(EstiloMetodos element, ClaseEnriquecida newClaseEnriquecida)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, EstiloMetodosDomainRoleId, newClaseEnriquecida);
		}
		#endregion
		#region EstiloMetodos domain role code
		
		/// <summary>
		/// EstiloMetodos domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstiloMetodosDomainRoleId = new global::System.Guid(0x303110db, 0xfde9, 0x43fd, 0x81, 0x9f, 0x57, 0xfd, 0x2f, 0x17, 0x9d, 0xa5);
		
		/// <summary>
		/// DomainRole EstiloMetodos
		/// Description for IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos.EstiloMetodos
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos/EstiloMetodos.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos/EstiloMetodos.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ClaseEnriquecida", PropertyDisplayNameKey="IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos/EstiloMetodos.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("303110db-fde9-43fd-819f-57fd2f179da5")]
		public virtual EstiloMetodos EstiloMetodos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstiloMetodos)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstiloMetodosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstiloMetodosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstiloMetodos of a ClaseEnriquecida
		/// <summary>
		/// Gets EstiloMetodos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static EstiloMetodos GetEstiloMetodos(ClaseEnriquecida element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ClaseEnriquecidaDomainRoleId) as EstiloMetodos;
		}
		
		/// <summary>
		/// Sets EstiloMetodos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEstiloMetodos(ClaseEnriquecida element, EstiloMetodos newEstiloMetodos)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ClaseEnriquecidaDomainRoleId, newEstiloMetodos);
		}
		#endregion
		#region ClaseEnriquecida link accessor
		/// <summary>
		/// Get the ClaseEnriquecidaHasEstiloMetodos link to a ClaseEnriquecida.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos GetLinkToEstiloMetodos (global::IPS.UMLSPF.ClaseEnriquecida claseEnriquecidaInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos>(claseEnriquecidaInstance, global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos.ClaseEnriquecidaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ClaseEnriquecida not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region EstiloMetodos link accessor
		/// <summary>
		/// Get the ClaseEnriquecidaHasEstiloMetodos link to a EstiloMetodos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos GetLinkToClaseEnriquecida (global::IPS.UMLSPF.EstiloMetodos estiloMetodosInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos>(estiloMetodosInstance, global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos.EstiloMetodosDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of EstiloMetodos not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ClaseEnriquecidaHasEstiloMetodos instance accessors
		
		/// <summary>
		/// Get any ClaseEnriquecidaHasEstiloMetodos links between a given ClaseEnriquecida and a EstiloMetodos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos> GetLinks( global::IPS.UMLSPF.ClaseEnriquecida source, global::IPS.UMLSPF.EstiloMetodos target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos>(source, global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos.ClaseEnriquecidaDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos link in links )
			{
				if ( target.Equals(link.EstiloMetodos) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseEnriquecidaHasEstiloMetodos link between a given ClaseEnriquecidaand a EstiloMetodos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos GetLink( global::IPS.UMLSPF.ClaseEnriquecida source, global::IPS.UMLSPF.EstiloMetodos target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos>(source, global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos.ClaseEnriquecidaDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseEnriquecidaHasEstiloMetodos link in links )
			{
				if ( target.Equals(link.EstiloMetodos) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship ModeloClassWEBHasHerencia
	/// Description for IPS.UMLSPF.ModeloClassWEBHasHerencia
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.ModeloClassWEBHasHerencia.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.ModeloClassWEBHasHerencia.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("24d780d1-507c-4024-bc17-001de12d9553")]
	public partial class ModeloClassWEBHasHerencia : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ModeloClassWEBHasHerencia domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x24d780d1, 0x507c, 0x4024, 0xbc, 0x17, 0x00, 0x1d, 0xe1, 0x2d, 0x95, 0x53);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ModeloClassWEBHasHerencia link in the same Partition as the given ModeloClassWEB
		/// </summary>
		/// <param name="source">ModeloClassWEB to use as the source of the relationship.</param>
		/// <param name="target">Herencia to use as the target of the relationship.</param>
		public ModeloClassWEBHasHerencia(ModeloClassWEB source, Herencia target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ModeloClassWEBHasHerencia.ModeloClassWEBDomainRoleId, source), new DslModeling::RoleAssignment(ModeloClassWEBHasHerencia.HerenciaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ModeloClassWEBHasHerencia(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ModeloClassWEBHasHerencia(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ModeloClassWEBHasHerencia(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ModeloClassWEBHasHerencia(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ModeloClassWEB domain role code
		
		/// <summary>
		/// ModeloClassWEB domain role Id.
		/// </summary>
		public static readonly global::System.Guid ModeloClassWEBDomainRoleId = new global::System.Guid(0x40c44201, 0x2684, 0x45e3, 0x9a, 0xb4, 0x9e, 0x77, 0xb2, 0xa7, 0xe5, 0x0e);
		
		/// <summary>
		/// DomainRole ModeloClassWEB
		/// Description for IPS.UMLSPF.ModeloClassWEBHasHerencia.ModeloClassWEB
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ModeloClassWEBHasHerencia/ModeloClassWEB.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ModeloClassWEBHasHerencia/ModeloClassWEB.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Herencia", PropertyDisplayNameKey="IPS.UMLSPF.ModeloClassWEBHasHerencia/ModeloClassWEB.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("40c44201-2684-45e3-9ab4-9e77b2a7e50e")]
		public virtual ModeloClassWEB ModeloClassWEB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ModeloClassWEB)DslModeling::DomainRoleInfo.GetRolePlayer(this, ModeloClassWEBDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ModeloClassWEBDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ModeloClassWEB of a Herencia
		/// <summary>
		/// Gets ModeloClassWEB.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ModeloClassWEB GetModeloClassWEB(Herencia element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, HerenciaDomainRoleId) as ModeloClassWEB;
		}
		
		/// <summary>
		/// Sets ModeloClassWEB.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetModeloClassWEB(Herencia element, ModeloClassWEB newModeloClassWEB)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, HerenciaDomainRoleId, newModeloClassWEB);
		}
		#endregion
		#region Herencia domain role code
		
		/// <summary>
		/// Herencia domain role Id.
		/// </summary>
		public static readonly global::System.Guid HerenciaDomainRoleId = new global::System.Guid(0xd88b4270, 0x3988, 0x4315, 0x89, 0xab, 0xad, 0x58, 0x67, 0x86, 0x16, 0xa9);
		
		/// <summary>
		/// DomainRole Herencia
		/// Description for IPS.UMLSPF.ModeloClassWEBHasHerencia.Herencia
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ModeloClassWEBHasHerencia/Herencia.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ModeloClassWEBHasHerencia/Herencia.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ModeloClassWEB", PropertyDisplayNameKey="IPS.UMLSPF.ModeloClassWEBHasHerencia/Herencia.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("d88b4270-3988-4315-89ab-ad58678616a9")]
		public virtual Herencia Herencia
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Herencia)DslModeling::DomainRoleInfo.GetRolePlayer(this, HerenciaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, HerenciaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Herencia of a ModeloClassWEB
		/// <summary>
		/// Gets a list of Herencia.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Herencia> GetHerencia(ModeloClassWEB element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Herencia>, Herencia>(element, ModeloClassWEBDomainRoleId);
		}
		#endregion
		#region ModeloClassWEB link accessor
		/// <summary>
		/// Get the list of ModeloClassWEBHasHerencia links to a ModeloClassWEB.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ModeloClassWEBHasHerencia> GetLinksToHerencia ( global::IPS.UMLSPF.ModeloClassWEB modeloClassWEBInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ModeloClassWEBHasHerencia>(modeloClassWEBInstance, global::IPS.UMLSPF.ModeloClassWEBHasHerencia.ModeloClassWEBDomainRoleId);
		}
		#endregion
		#region Herencia link accessor
		/// <summary>
		/// Get the ModeloClassWEBHasHerencia link to a Herencia.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ModeloClassWEBHasHerencia GetLinkToModeloClassWEB (global::IPS.UMLSPF.Herencia herenciaInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ModeloClassWEBHasHerencia> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ModeloClassWEBHasHerencia>(herenciaInstance, global::IPS.UMLSPF.ModeloClassWEBHasHerencia.HerenciaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Herencia not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ModeloClassWEBHasHerencia instance accessors
		
		/// <summary>
		/// Get any ModeloClassWEBHasHerencia links between a given ModeloClassWEB and a Herencia.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ModeloClassWEBHasHerencia> GetLinks( global::IPS.UMLSPF.ModeloClassWEB source, global::IPS.UMLSPF.Herencia target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.ModeloClassWEBHasHerencia> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.ModeloClassWEBHasHerencia>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ModeloClassWEBHasHerencia> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ModeloClassWEBHasHerencia>(source, global::IPS.UMLSPF.ModeloClassWEBHasHerencia.ModeloClassWEBDomainRoleId);
			foreach ( global::IPS.UMLSPF.ModeloClassWEBHasHerencia link in links )
			{
				if ( target.Equals(link.Herencia) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ModeloClassWEBHasHerencia link between a given ModeloClassWEBand a Herencia.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ModeloClassWEBHasHerencia GetLink( global::IPS.UMLSPF.ModeloClassWEB source, global::IPS.UMLSPF.Herencia target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ModeloClassWEBHasHerencia> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ModeloClassWEBHasHerencia>(source, global::IPS.UMLSPF.ModeloClassWEBHasHerencia.ModeloClassWEBDomainRoleId);
			foreach ( global::IPS.UMLSPF.ModeloClassWEBHasHerencia link in links )
			{
				if ( target.Equals(link.Herencia) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship EsPadre
	/// Description for IPS.UMLSPF.EsPadre
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.EsPadre.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.EsPadre.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("2332c0eb-ffb1-4991-a149-87c7d8fb3f24")]
	public partial class EsPadre : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// EsPadre domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2332c0eb, 0xffb1, 0x4991, 0xa1, 0x49, 0x87, 0xc7, 0xd8, 0xfb, 0x3f, 0x24);
	
				
		/// <summary>
		/// Constructor
		/// Creates a EsPadre link in the same Partition as the given Herencia
		/// </summary>
		/// <param name="source">Herencia to use as the source of the relationship.</param>
		/// <param name="target">Clase to use as the target of the relationship.</param>
		public EsPadre(Herencia source, Clase target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(EsPadre.HerenciaDomainRoleId, source), new DslModeling::RoleAssignment(EsPadre.ClaseDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public EsPadre(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public EsPadre(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public EsPadre(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public EsPadre(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Herencia domain role code
		
		/// <summary>
		/// Herencia domain role Id.
		/// </summary>
		public static readonly global::System.Guid HerenciaDomainRoleId = new global::System.Guid(0xbc8350d8, 0xc103, 0x4725, 0x8c, 0x38, 0xf2, 0xb3, 0xa1, 0x06, 0x5d, 0x16);
		
		/// <summary>
		/// DomainRole Herencia
		/// Description for IPS.UMLSPF.EsPadre.Herencia
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.EsPadre/Herencia.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.EsPadre/Herencia.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ClasePadre", PropertyDisplayNameKey="IPS.UMLSPF.EsPadre/Herencia.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("bc8350d8-c103-4725-8c38-f2b3a1065d16")]
		public virtual Herencia Herencia
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Herencia)DslModeling::DomainRoleInfo.GetRolePlayer(this, HerenciaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, HerenciaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access HerenciaPadre of a Clase
		/// <summary>
		/// Gets a list of HerenciaPadre.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Herencia> GetHerenciaPadre(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Herencia>, Herencia>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0xa303e521, 0xffca, 0x4795, 0xa4, 0x20, 0x6b, 0x76, 0x27, 0xf1, 0x71, 0xc4);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for IPS.UMLSPF.EsPadre.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.EsPadre/Clase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.EsPadre/Clase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "HerenciaPadre", PropertyDisplayNameKey="IPS.UMLSPF.EsPadre/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("a303e521-ffca-4795-a420-6b7627f171c4")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ClasePadre of a Herencia
		/// <summary>
		/// Gets a list of ClasePadre.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClasePadre(Herencia element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, HerenciaDomainRoleId);
		}
		#endregion
		#region Herencia link accessor
		/// <summary>
		/// Get the list of EsPadre links to a Herencia.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.EsPadre> GetLinksToClasePadre ( global::IPS.UMLSPF.Herencia herenciaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.EsPadre>(herenciaInstance, global::IPS.UMLSPF.EsPadre.HerenciaDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of EsPadre links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.EsPadre> GetLinksToHerenciaPadre ( global::IPS.UMLSPF.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.EsPadre>(claseInstance, global::IPS.UMLSPF.EsPadre.ClaseDomainRoleId);
		}
		#endregion
		#region EsPadre instance accessors
		
		/// <summary>
		/// Get any EsPadre links between a given Herencia and a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.EsPadre> GetLinks( global::IPS.UMLSPF.Herencia source, global::IPS.UMLSPF.Clase target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.EsPadre> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.EsPadre>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.EsPadre> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.EsPadre>(source, global::IPS.UMLSPF.EsPadre.HerenciaDomainRoleId);
			foreach ( global::IPS.UMLSPF.EsPadre link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one EsPadre link between a given Herenciaand a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.EsPadre GetLink( global::IPS.UMLSPF.Herencia source, global::IPS.UMLSPF.Clase target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.EsPadre> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.EsPadre>(source, global::IPS.UMLSPF.EsPadre.HerenciaDomainRoleId);
			foreach ( global::IPS.UMLSPF.EsPadre link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship EsHija
	/// Description for IPS.UMLSPF.EsHija
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.EsHija.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.EsHija.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("462ccd63-3ec4-4df2-8c85-503acc13624e")]
	public partial class EsHija : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// EsHija domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x462ccd63, 0x3ec4, 0x4df2, 0x8c, 0x85, 0x50, 0x3a, 0xcc, 0x13, 0x62, 0x4e);
	
				
		/// <summary>
		/// Constructor
		/// Creates a EsHija link in the same Partition as the given Herencia
		/// </summary>
		/// <param name="source">Herencia to use as the source of the relationship.</param>
		/// <param name="target">Clase to use as the target of the relationship.</param>
		public EsHija(Herencia source, Clase target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(EsHija.HerenciaDomainRoleId, source), new DslModeling::RoleAssignment(EsHija.ClaseDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public EsHija(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public EsHija(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public EsHija(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public EsHija(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Herencia domain role code
		
		/// <summary>
		/// Herencia domain role Id.
		/// </summary>
		public static readonly global::System.Guid HerenciaDomainRoleId = new global::System.Guid(0xdf28bd66, 0xeb0e, 0x4e70, 0xba, 0xe5, 0xdf, 0xcf, 0x1b, 0xef, 0x82, 0x0f);
		
		/// <summary>
		/// DomainRole Herencia
		/// Description for IPS.UMLSPF.EsHija.Herencia
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.EsHija/Herencia.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.EsHija/Herencia.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ClaseHija", PropertyDisplayNameKey="IPS.UMLSPF.EsHija/Herencia.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("df28bd66-eb0e-4e70-bae5-dfcf1bef820f")]
		public virtual Herencia Herencia
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Herencia)DslModeling::DomainRoleInfo.GetRolePlayer(this, HerenciaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, HerenciaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access HerenciaHija of a Clase
		/// <summary>
		/// Gets a list of HerenciaHija.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Herencia> GetHerenciaHija(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Herencia>, Herencia>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x19c44922, 0x5ef0, 0x4b7d, 0xa4, 0xfb, 0xa5, 0x6d, 0xc4, 0x65, 0xe5, 0x5b);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for IPS.UMLSPF.EsHija.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.EsHija/Clase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.EsHija/Clase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "HerenciaHija", PropertyDisplayNameKey="IPS.UMLSPF.EsHija/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("19c44922-5ef0-4b7d-a4fb-a56dc465e55b")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ClaseHija of a Herencia
		/// <summary>
		/// Gets a list of ClaseHija.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClaseHija(Herencia element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, HerenciaDomainRoleId);
		}
		#endregion
		#region Herencia link accessor
		/// <summary>
		/// Get the list of EsHija links to a Herencia.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.EsHija> GetLinksToClaseHija ( global::IPS.UMLSPF.Herencia herenciaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.EsHija>(herenciaInstance, global::IPS.UMLSPF.EsHija.HerenciaDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of EsHija links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.EsHija> GetLinksToHerenciaHija ( global::IPS.UMLSPF.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.EsHija>(claseInstance, global::IPS.UMLSPF.EsHija.ClaseDomainRoleId);
		}
		#endregion
		#region EsHija instance accessors
		
		/// <summary>
		/// Get any EsHija links between a given Herencia and a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.EsHija> GetLinks( global::IPS.UMLSPF.Herencia source, global::IPS.UMLSPF.Clase target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.EsHija> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.EsHija>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.EsHija> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.EsHija>(source, global::IPS.UMLSPF.EsHija.HerenciaDomainRoleId);
			foreach ( global::IPS.UMLSPF.EsHija link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one EsHija link between a given Herenciaand a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.EsHija GetLink( global::IPS.UMLSPF.Herencia source, global::IPS.UMLSPF.Clase target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.EsHija> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.EsHija>(source, global::IPS.UMLSPF.EsHija.HerenciaDomainRoleId);
			foreach ( global::IPS.UMLSPF.EsHija link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship ClaseHasAtributoIdentificador
	/// Description for IPS.UMLSPF.ClaseHasAtributoIdentificador
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseHasAtributoIdentificador.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseHasAtributoIdentificador.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("c01259a4-025d-4d30-a785-216b7d4b748d")]
	public partial class ClaseHasAtributoIdentificador : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseHasAtributoIdentificador domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc01259a4, 0x025d, 0x4d30, 0xa7, 0x85, 0x21, 0x6b, 0x7d, 0x4b, 0x74, 0x8d);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseHasAtributoIdentificador link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">AtributoIdentificador to use as the target of the relationship.</param>
		public ClaseHasAtributoIdentificador(Clase source, AtributoIdentificador target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseHasAtributoIdentificador.ClaseDomainRoleId, source), new DslModeling::RoleAssignment(ClaseHasAtributoIdentificador.AtributoIdentificadorDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseHasAtributoIdentificador(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseHasAtributoIdentificador(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseHasAtributoIdentificador(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseHasAtributoIdentificador(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x53d76716, 0xd806, 0x403a, 0x91, 0xf5, 0x91, 0x07, 0x47, 0x17, 0x15, 0x8d);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for IPS.UMLSPF.ClaseHasAtributoIdentificador.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseHasAtributoIdentificador/Clase.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseHasAtributoIdentificador/Clase.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "AtributoIdentificador", PropertyDisplayNameKey="IPS.UMLSPF.ClaseHasAtributoIdentificador/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("53d76716-d806-403a-91f5-91074717158d")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase of a AtributoIdentificador
		/// <summary>
		/// Gets Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Clase GetClase(AtributoIdentificador element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, AtributoIdentificadorDomainRoleId) as Clase;
		}
		
		/// <summary>
		/// Sets Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetClase(AtributoIdentificador element, Clase newClase)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, AtributoIdentificadorDomainRoleId, newClase);
		}
		#endregion
		#region AtributoIdentificador domain role code
		
		/// <summary>
		/// AtributoIdentificador domain role Id.
		/// </summary>
		public static readonly global::System.Guid AtributoIdentificadorDomainRoleId = new global::System.Guid(0xb05cceef, 0xad7d, 0x4400, 0xbd, 0xed, 0x4e, 0x9c, 0x15, 0xb2, 0xb8, 0x81);
		
		/// <summary>
		/// DomainRole AtributoIdentificador
		/// Description for IPS.UMLSPF.ClaseHasAtributoIdentificador.AtributoIdentificador
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.ClaseHasAtributoIdentificador/AtributoIdentificador.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.ClaseHasAtributoIdentificador/AtributoIdentificador.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Clase", PropertyDisplayNameKey="IPS.UMLSPF.ClaseHasAtributoIdentificador/AtributoIdentificador.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("b05cceef-ad7d-4400-bded-4e9c15b2b881")]
		public virtual AtributoIdentificador AtributoIdentificador
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (AtributoIdentificador)DslModeling::DomainRoleInfo.GetRolePlayer(this, AtributoIdentificadorDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, AtributoIdentificadorDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access AtributoIdentificador of a Clase
		/// <summary>
		/// Gets AtributoIdentificador.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static AtributoIdentificador GetAtributoIdentificador(Clase element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ClaseDomainRoleId) as AtributoIdentificador;
		}
		
		/// <summary>
		/// Sets AtributoIdentificador.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetAtributoIdentificador(Clase element, AtributoIdentificador newAtributoIdentificador)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ClaseDomainRoleId, newAtributoIdentificador);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the ClaseHasAtributoIdentificador link to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseHasAtributoIdentificador GetLinkToAtributoIdentificador (global::IPS.UMLSPF.Clase claseInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseHasAtributoIdentificador> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasAtributoIdentificador>(claseInstance, global::IPS.UMLSPF.ClaseHasAtributoIdentificador.ClaseDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Clase not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region AtributoIdentificador link accessor
		/// <summary>
		/// Get the ClaseHasAtributoIdentificador link to a AtributoIdentificador.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseHasAtributoIdentificador GetLinkToClase (global::IPS.UMLSPF.AtributoIdentificador atributoIdentificadorInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseHasAtributoIdentificador> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasAtributoIdentificador>(atributoIdentificadorInstance, global::IPS.UMLSPF.ClaseHasAtributoIdentificador.AtributoIdentificadorDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of AtributoIdentificador not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ClaseHasAtributoIdentificador instance accessors
		
		/// <summary>
		/// Get any ClaseHasAtributoIdentificador links between a given Clase and a AtributoIdentificador.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.ClaseHasAtributoIdentificador> GetLinks( global::IPS.UMLSPF.Clase source, global::IPS.UMLSPF.AtributoIdentificador target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseHasAtributoIdentificador> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.ClaseHasAtributoIdentificador>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseHasAtributoIdentificador> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasAtributoIdentificador>(source, global::IPS.UMLSPF.ClaseHasAtributoIdentificador.ClaseDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseHasAtributoIdentificador link in links )
			{
				if ( target.Equals(link.AtributoIdentificador) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseHasAtributoIdentificador link between a given Claseand a AtributoIdentificador.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.ClaseHasAtributoIdentificador GetLink( global::IPS.UMLSPF.Clase source, global::IPS.UMLSPF.AtributoIdentificador target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.ClaseHasAtributoIdentificador> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.ClaseHasAtributoIdentificador>(source, global::IPS.UMLSPF.ClaseHasAtributoIdentificador.ClaseDomainRoleId);
			foreach ( global::IPS.UMLSPF.ClaseHasAtributoIdentificador link in links )
			{
				if ( target.Equals(link.AtributoIdentificador) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace IPS.UMLSPF
{
	/// <summary>
	/// DomainRelationship OperacionesHasParametros
	/// Description for IPS.UMLSPF.OperacionesHasParametros
	/// </summary>
	[DslDesign::DisplayNameResource("IPS.UMLSPF.OperacionesHasParametros.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("IPS.UMLSPF.OperacionesHasParametros.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::IPS.UMLSPF.UMLSPFDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("dc02bbdf-6769-40c6-9386-8c9f2d611302")]
	public partial class OperacionesHasParametros : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// OperacionesHasParametros domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xdc02bbdf, 0x6769, 0x40c6, 0x93, 0x86, 0x8c, 0x9f, 0x2d, 0x61, 0x13, 0x02);
	
				
		/// <summary>
		/// Constructor
		/// Creates a OperacionesHasParametros link in the same Partition as the given Operaciones
		/// </summary>
		/// <param name="source">Operaciones to use as the source of the relationship.</param>
		/// <param name="target">Parametros to use as the target of the relationship.</param>
		public OperacionesHasParametros(Operaciones source, Parametros target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(OperacionesHasParametros.OperacionesDomainRoleId, source), new DslModeling::RoleAssignment(OperacionesHasParametros.ParametrosDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public OperacionesHasParametros(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public OperacionesHasParametros(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public OperacionesHasParametros(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public OperacionesHasParametros(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Operaciones domain role code
		
		/// <summary>
		/// Operaciones domain role Id.
		/// </summary>
		public static readonly global::System.Guid OperacionesDomainRoleId = new global::System.Guid(0x489bf74b, 0xcaaf, 0x404e, 0x87, 0xb6, 0x95, 0xa1, 0x00, 0xc3, 0x25, 0x08);
		
		/// <summary>
		/// DomainRole Operaciones
		/// Description for IPS.UMLSPF.OperacionesHasParametros.Operaciones
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.OperacionesHasParametros/Operaciones.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.OperacionesHasParametros/Operaciones.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Parametros", PropertyDisplayNameKey="IPS.UMLSPF.OperacionesHasParametros/Operaciones.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("489bf74b-caaf-404e-87b6-95a100c32508")]
		public virtual Operaciones Operaciones
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Operaciones)DslModeling::DomainRoleInfo.GetRolePlayer(this, OperacionesDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, OperacionesDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Operaciones of a Parametros
		/// <summary>
		/// Gets Operaciones.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Operaciones GetOperaciones(Parametros element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ParametrosDomainRoleId) as Operaciones;
		}
		
		/// <summary>
		/// Sets Operaciones.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetOperaciones(Parametros element, Operaciones newOperaciones)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ParametrosDomainRoleId, newOperaciones);
		}
		#endregion
		#region Parametros domain role code
		
		/// <summary>
		/// Parametros domain role Id.
		/// </summary>
		public static readonly global::System.Guid ParametrosDomainRoleId = new global::System.Guid(0x93d5218d, 0x0ea0, 0x4607, 0x89, 0x77, 0x06, 0xa6, 0xd2, 0x84, 0x4e, 0x0c);
		
		/// <summary>
		/// DomainRole Parametros
		/// Description for IPS.UMLSPF.OperacionesHasParametros.Parametros
		/// </summary>
		[DslDesign::DisplayNameResource("IPS.UMLSPF.OperacionesHasParametros/Parametros.DisplayName", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("IPS.UMLSPF.OperacionesHasParametros/Parametros.Description", typeof(global::IPS.UMLSPF.UMLSPFDomainModel), "IPS.UMLSPF.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Operaciones", PropertyDisplayNameKey="IPS.UMLSPF.OperacionesHasParametros/Parametros.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("93d5218d-0ea0-4607-8977-06a6d2844e0c")]
		public virtual Parametros Parametros
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Parametros)DslModeling::DomainRoleInfo.GetRolePlayer(this, ParametrosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ParametrosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Parametros of a Operaciones
		/// <summary>
		/// Gets a list of Parametros.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Parametros> GetParametros(Operaciones element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Parametros>, Parametros>(element, OperacionesDomainRoleId);
		}
		#endregion
		#region Operaciones link accessor
		/// <summary>
		/// Get the list of OperacionesHasParametros links to a Operaciones.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.OperacionesHasParametros> GetLinksToParametros ( global::IPS.UMLSPF.Operaciones operacionesInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.OperacionesHasParametros>(operacionesInstance, global::IPS.UMLSPF.OperacionesHasParametros.OperacionesDomainRoleId);
		}
		#endregion
		#region Parametros link accessor
		/// <summary>
		/// Get the OperacionesHasParametros link to a Parametros.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.OperacionesHasParametros GetLinkToOperaciones (global::IPS.UMLSPF.Parametros parametrosInstance)
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.OperacionesHasParametros> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.OperacionesHasParametros>(parametrosInstance, global::IPS.UMLSPF.OperacionesHasParametros.ParametrosDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Parametros not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region OperacionesHasParametros instance accessors
		
		/// <summary>
		/// Get any OperacionesHasParametros links between a given Operaciones and a Parametros.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::IPS.UMLSPF.OperacionesHasParametros> GetLinks( global::IPS.UMLSPF.Operaciones source, global::IPS.UMLSPF.Parametros target )
		{
			global::System.Collections.Generic.List<global::IPS.UMLSPF.OperacionesHasParametros> outLinks = new global::System.Collections.Generic.List<global::IPS.UMLSPF.OperacionesHasParametros>();
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.OperacionesHasParametros> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.OperacionesHasParametros>(source, global::IPS.UMLSPF.OperacionesHasParametros.OperacionesDomainRoleId);
			foreach ( global::IPS.UMLSPF.OperacionesHasParametros link in links )
			{
				if ( target.Equals(link.Parametros) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one OperacionesHasParametros link between a given Operacionesand a Parametros.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::IPS.UMLSPF.OperacionesHasParametros GetLink( global::IPS.UMLSPF.Operaciones source, global::IPS.UMLSPF.Parametros target )
		{
			global::System.Collections.Generic.IList<global::IPS.UMLSPF.OperacionesHasParametros> links = DslModeling::DomainRoleInfo.GetElementLinks<global::IPS.UMLSPF.OperacionesHasParametros>(source, global::IPS.UMLSPF.OperacionesHasParametros.OperacionesDomainRoleId);
			foreach ( global::IPS.UMLSPF.OperacionesHasParametros link in links )
			{
				if ( target.Equals(link.Parametros) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
